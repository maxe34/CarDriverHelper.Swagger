// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220510133757_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repositories.Entities.CarWash", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("WashPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CarWashes");
                });

            modelBuilder.Entity("Repositories.Entities.CoffeeShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CoffeeShops");
                });

            modelBuilder.Entity("Repositories.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Repositories.Entities.GasStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CarWash")
                        .HasColumnType("bit");

                    b.Property<int?>("CarWashId")
                        .HasColumnType("int");

                    b.Property<bool>("Coffee")
                        .HasColumnType("bit");

                    b.Property<int?>("CoffeeShopId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<double>("DieselPrice")
                        .HasColumnType("float");

                    b.Property<double>("GasolinePrice")
                        .HasColumnType("float");

                    b.Property<double?>("GplPrice")
                        .HasColumnType("float");

                    b.Property<bool>("Market")
                        .HasColumnType("bit");

                    b.Property<double?>("MetanPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarWashId");

                    b.HasIndex("CoffeeShopId");

                    b.HasIndex("CompanyId");

                    b.ToTable("GasStations");
                });

            modelBuilder.Entity("Repositories.Entities.GasStation", b =>
                {
                    b.HasOne("Repositories.Entities.CarWash", "CarWashData")
                        .WithMany()
                        .HasForeignKey("CarWashId");

                    b.HasOne("Repositories.Entities.CoffeeShop", "CoffeeShop")
                        .WithMany()
                        .HasForeignKey("CoffeeShopId");

                    b.HasOne("Repositories.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarWashData");

                    b.Navigation("CoffeeShop");

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
